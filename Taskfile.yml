version: "3"
# Task runner for Manifest V3 for Chromium browsers
# =================================================
# As of Aug. 2022 Firefox is not supported.
#
# This task runner requires Task to be installed.
# https://taskfile.dev/#/installation
#
# Tasks DO NOT RUN on PowerShell, Windows users should use WSL.
#

vars:
  # The published version number of RetroTxt used in the manifest.json and GitHub commit
  # Must use the numeric format 5.0.0
  VERSION: "5.0.0"

tasks:
  default:
    silent: true
    desc: this task, list all available tasks
    cmds:
     - task --list
  # internal commands
  rename-build:
    dir: web-ext-artifacts
    cmds:
      - mv -f "retrotxt-{{.VERSION}}.zip" "retrotxt_for_{{.BROWSER}}-{{.VERSION}}.zip"
    status:
      - test -f "retrotxt_for_{{.BROWSER}}-{{.VERSION}}.zip"
  set-version:
    cmds:
      - pnpm exec dot-json ext/manifest.json version "{{.VERSION}}"
    silent: true
  set-ver:
    cmds:
      - cmd: git tag "v{{.VERSION}}"
        ignore_error: true
      - cmd: git push --tags
        ignore_error: true
    silent: true

  # user commands that are displayed with `task --list`
  builds:
    desc: Creates submission packages for Chrome, Firefox is unsupported.
    summary: |
      Creates a package that is intended for submission to the Chrome Web Store.

      Packaged file will be located in /web-ext-artifacts
      Its filename will be retrotxt_for_chrome-{{.VERSION}}.zip
    cmds:
      - task: build-chrome
  build-chrome:
    # edit web-ext-chrome.js to hide files and directories
    cmds:
      - task: version-set
      - task: depends
      - cmd: pnpm exec web-ext --config ext/.web-ext-chrome.js --source-dir ./ext build
        ignore_error: true
      - task: rename-build
        vars: { BROWSER: "chrome" }
        ignore_error: true
  depends:
    desc: Copies the latest dependencies over to the package.
    # use shx for Windows compatibility
    cmds:
      - cmd: pnpm exec shx cp -f "node_modules/bulma/css/bulma.min.css" "ext/css/bulma.min.css"
      - cmd: pnpm exec shx cp -f "node_modules/qunit/qunit/qunit.css" "ext/test/qunit.css"
      - cmd: pnpm exec shx cp -f "node_modules/qunit/qunit/qunit.js" "ext/test/qunit.js"
  init:
    desc: Initialises this repository for first time use after being cloned.
    cmds:
      - cmd: pnpm install
      - task: depends
  version-set:
    desc: Applies the VERSION in Taskfile.yml variable value to the manifest.json and package.json files.
    deps: [set-version, set-ver]
  version-purge:
    desc: Removes the current VERSION variable value as a tag from the GitHub repository.
    cmds:
      - cmd: git tag "v{{.VERSION}}" --delete
        ignore_error: true
      - cmd: git push --tags
  commit:
    desc: Applies the VERSION variable to the JSON files and commits it to GitHub.
    deps: [set-version, version-purge, builds]
    cmds:
      - task: version-purge
        ignore_error: true
      - task: set-version
      - task: builds
      - cmd: git tag -a "v{{.VERSION}}" --message "Version {{.VERSION}}"
      - cmd: git push --tags
      - cmd: git push
  update:
    desc: Update to the latest dependencies.
    cmds:
      - cmd: pnpm update
      - cmd: pnpm exec shx echo ""
      - task: depends
    silent: true
